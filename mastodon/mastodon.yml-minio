version: '3'
services:
  db:
    restart: always
    image: postgres:alpine
    volumes:
      - /sync/mastodon/postgres:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.labels.location == home
  redis:
    restart: always
    image: redis:alpine
    volumes:
      #- mastodon-redis:/data:rw
      - /sync/mastodon/redis:/data
    deploy:
      placement:
        constraints:
          - node.labels.location == home
  web:
    build: .
    image: fredix/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - "3000"
    depends_on:
      - db
      - redis
    volumes:
      #- mastodon-store:/mastodon:rw
      - mastodon-assets:/mastodon/public/assets:rw
      - mastodon-system:/mastodon/public/system:rw
      - mastodon-packs:/mastodon/public/packs:rw
      #- /sync/mastodon/public/assets:/mastodon/public/assets
      #- /sync/mastodon/public/system:/mastodon/public/system
      #- /sync/mastodon/public/packs:/mastodon/public/packs
    networks:
      - default
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.labels.location == home
      labels:
        - "traefik.port=3000"
        - "traefik.docker.network=traefik-net"
        - "traefik.frontend.rule=Host:pouet.fredix.xyz"
  streaming:
    build: .
    image: fredix/mastodon
    restart: always
    env_file: .env.production
    command: npm run start
    ports:
      - "4000"
    depends_on:
      - db
      - redis
    networks:
      - default
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.labels.location == home
      labels:
        - "traefik.port=4000"
        - "traefik.docker.network=traefik-net"
        - "traefik.backend=streaming"
        - "traefik.frontend.rule=Host:pouet.fredix.xyz;PathPrefixStrip:/api/v1/streaming"
  sidekiq:
    build: .
    image: fredix/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q default -q mailers -q pull -q push
    depends_on:
      - db
      - redis
    volumes:
      - mastodon-system:/mastodon/public/system:rw
      #- /sync/mastodon/public/system:/mastodon/public/system
    deploy:
      placement:
        constraints:
          - node.labels.location == home


volumes:
  mastodon-system:
    driver: minio/minfs
    driver_opts:
      endpoint: http://192.168.0.36:9000
      access-key: key
      secret-key: key
      bucket: mastodon-system
      #opts: "uid=991,gid=991"
      opts: "uid=991,gid=991,cache=/tmp/mastodon-system"
  mastodon-packs:
    driver: minio/minfs
    driver_opts:
      endpoint: http://192.168.0.36:9000
      access-key: key
      secret-key: key
      bucket: mastodon-packs
      #opts: "uid=991,gid=991"
      opts: "uid=991,gid=991,cache=/tmp/mastodon-packs"
  mastodon-assets:
    driver: minio/minfs
    driver_opts:
      endpoint: http://192.168.0.36:9000
      access-key: key
      secret-key: key
      bucket: mastodon-assets
      opts: "uid=991,gid=991,cache=/tmp/mastodon-assets"
  mastodon-redis:
    driver: minio/minfs
    driver_opts:
      endpoint: http://192.168.0.36:9000
      access-key: key
      secret-key: key
      bucket: mastodon-redis
      opts: "uid=100,gid=101,cache=/tmp/mastodon-redis"


networks:
  traefik-net:
    external: true
